// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package grpc_pingpong_bench;

// The grpc_pingpong_bench service definition.
service PingPong {
  // Sends a Ping
  rpc Ping (PingPongRequest) returns (PingPongReply) {}

  // A client-to-server streaming RPC.
  // Accepts a stream of pings, returning a
  // PingPong Summary when pings are completed.
  rpc PingSummary (stream PingPongRequest) returns (PingPongSummaryReply) {}

// A Bidirectional streaming RPC.
  // Accepts a stream of pings sent and echoes back
  rpc PingsEcho(stream PingPongRequest) returns (stream PingPongReply) {}

}

// The request message containing the user's name.
message PingPongRequest {
  string ping_str = 1;
  uint64 ping_uint64 = 2; 
  double ping_d = 3;
  uint64 do_busywork_nsec = 4;  
}

// The response message containing the pingpong response 
message PingPongReply {
  string pong_str = 1;
  uint64 pong_uint64 = 2; 
  double pong_d = 3;
}

message PingPongSummaryReply {
	uint64 pong_count = 1;
	uint64 pong_bytes = 2;
	// The duration of the traversal in seconds.
  uint64 elapsed_time = 3;
}
